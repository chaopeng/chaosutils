apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'findbugs'

sourceCompatibility = 1.7
targetCompatibility = 1.7

ext.projectName = "$name"

// jars for zip
ext.jarsForZip = ["chaosutils.jar"]

apply plugin: 'com.github.ben-manes.versions'

buildscript {
	repositories {
		jcenter()
	}

	dependencies {
		classpath 'com.github.ben-manes:gradle-versions-plugin:0.5'
	}
}

// check dependencyUpdates : gradle dependencyUpdates -Drevision=release

repositories {
	mavenCentral()
	// use maven.oschina.net
	// maven {
	//	 url 'http://maven.oschina.net/content/groups/public/'
	// }
}

dependencies {
	compile (
		'com.google.guava:guava:18.+',
		'commons-codec:commons-codec:1.9',
		'org.slf4j:slf4j-api:1.7.7',
		'ch.qos.logback:logback-core:1.1.2',
		'ch.qos.logback:logback-classic:1.1.2',
		'org.springframework:spring-context:4.1.1.RELEASE',
	)
	testCompile (
		'junit:junit:4.+'
	) 
}

jar {
//	manifest {
//		attributes 'Main-Class': ''
//	}
}

task initPath {
	sourceSets*.java.srcDirs*.each { it.mkdirs() }
	sourceSets*.resources.srcDirs*.each { it.mkdirs()}
}

ext.libPath = "build/libs"
task downloadDependencies {
	copy{
		from configurations.runtime
		into libPath
	}
}

assemble.dependsOn(downloadDependencies)

task export {
	dependsOn assemble
	
	copy{
		from libPath
		into exportDir + "/" + projectName
	}
}

task exportZip (type: Zip){
	dependsOn export
	
	from exportDir + "/" + projectName
	include jarsForZip
	destinationDir new File(projectDir, exportDir)
}

javadoc {
		options.overview = "overview.html"
}

// findbugs
tasks.withType(FindBugs) {
	ignoreFailures = true
	reports {
		xml.enabled = false
		html.enabled = true
	}
	reportLevel = "high"
}
